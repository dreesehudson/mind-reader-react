[{"/Users/reesehudson/Sites/bootcampF20/refactor/mind-reader-react/src/index.js":"1","/Users/reesehudson/Sites/bootcampF20/refactor/mind-reader-react/src/reportWebVitals.js":"2","/Users/reesehudson/Sites/bootcampF20/refactor/mind-reader-react/src/App.js":"3"},{"size":500,"mtime":1608317625018,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1608317625020,"results":"6","hashOfConfig":"5"},{"size":3755,"mtime":1609444700800,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"6sspce",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"/Users/reesehudson/Sites/bootcampF20/refactor/mind-reader-react/src/index.js",[],["16","17"],"/Users/reesehudson/Sites/bootcampF20/refactor/mind-reader-react/src/reportWebVitals.js",[],"/Users/reesehudson/Sites/bootcampF20/refactor/mind-reader-react/src/App.js",["18","19","20"],"import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport { Button, Card, CardBody, CardFooter, Col, ListGroup, Row, ListGroupItem } from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowCircleLeft, faArrowCircleRight, faUndo } from '@fortawesome/free-solid-svg-icons'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [view, setView] = useState(0)\n  const [symbols, setSymbols] = useState(['😎', '🥳', '😆', '🙃', '😄', '🤣', '🤓', '😏'])\n  const [chosenSymbol, setChosenSymbol] = useState(symbols[Math.floor(Math.random() * symbols.length)])\n  const [list, setList] = useState([])\n  const [reset, setReset] = useState(0)\n\n  useEffect(() => {\n    generateList()\n  }, [])\n\n  function generateList() {\n    setList([])\n    let proxy = []\n    for (let i = 0; i <= 99; i++) {\n      if (i % 9) {\n        let random = symbols[Math.floor(Math.random() * symbols.length)]\n        proxy.push([i + \" ---> \" + random])\n        //pick random symbol to assign to this number\n        setList(proxy);\n      }\n      else {\n        //assign the 'right answer' to this number\n        proxy.push([i + \" ---> \" + chosenSymbol])\n        setList(proxy);\n      }\n    }\n  }\n\n  function nextView() {\n    setView(view + 1)\n  }\n\n  function lastView() {\n    setView(view - 1)\n  }\n\n  function resetGame() {\n    setView(0)\n    setReset(reset + 1)\n  }\n\n  return (\n    <div className=\"App\">\n      <Card className='border-0'>\n        <CardBody className='mt-5 mb-5 pb-5 overflow-auto border-0'>\n          {view === 0 &&\n            <h1 className='display-3'>I can read your mind.</h1>}\n          {view === 1 &&\n            <h1 className='display-3'>Pick a number 01-99.</h1>}\n          {view === 2 &&\n            <>\n              <h1 className='display-3'>Add both digits together to get a new number.</h1>\n              <h2 className='mt-5'>Ex. 47 is 4 + 7 = 11</h2>\n            </>\n          }\n          {view === 3 &&\n            <>\n              <h1 className='display-3'>Subtract the new number from your original number.</h1>\n              <h2 className='mt-5'>Ex. 47 - 11 = 36</h2>\n            </>\n          }\n          {view === 4 &&\n            <>\n              <h1 className='display-3'>Find your new number and symbol.</h1>\n              <ListGroup>\n                {\n                  list.map((item, idx) =>\n                    <ListGroupItem key={idx}>{item}</ListGroupItem>\n                  )\n                }\n              </ListGroup>\n            </>\n          }\n          {view === 5 &&\n            <>\n              <h1 className='display-3'>Your symbol is {chosenSymbol}</h1>\n            </>\n          }\n        </CardBody>\n        <CardFooter className='bg-white border-0 fixed-bottom mt-5 pt-0'>\n          <Row>\n            <Col>\n              {view !== 0 &&\n                <Button className='bg-white border-white rounded-circle p-0 m-3'>\n                  <FontAwesomeIcon className='fa-5x text-secondary' icon={faArrowCircleLeft} onClick={() => lastView()} />\n                </Button>\n              }\n            </Col>\n            <Col>\n              {view === 5 ?\n                <Button className='bg-white border-white rounded-circle p-3'>\n                  <FontAwesomeIcon className='fa-5x text-primary' icon={faUndo} onClick={() => resetGame()} />\n                </Button>\n                :\n                <Button className='bg-white border-white rounded-circle p-0 m-3'>\n                  <FontAwesomeIcon className='fa-5x text-primary' icon={faArrowCircleRight} onClick={() => nextView()} />\n                </Button>\n              }\n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":10,"column":19,"nodeType":"27","messageId":"28","endLine":10,"endColumn":29},{"ruleId":"25","severity":1,"message":"29","line":11,"column":24,"nodeType":"27","messageId":"28","endLine":11,"endColumn":39},{"ruleId":"30","severity":1,"message":"31","line":17,"column":6,"nodeType":"32","endLine":17,"endColumn":8,"suggestions":"33"},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'setSymbols' is assigned a value but never used.","Identifier","unusedVar","'setChosenSymbol' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateList'. Either include it or remove the dependency array.","ArrayExpression",["36"],"no-global-assign","no-unsafe-negation",{"desc":"37","fix":"38"},"Update the dependencies array to be: [generateList]",{"range":"39","text":"40"},[756,758],"[generateList]"]